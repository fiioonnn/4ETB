function getAdobeIds(){}function checkLinks(){const e=Array.from(document.querySelectorAll("a")),t={missingHref:[],emptyHref:[],emptyFragment:[]};e.forEach((e=>{const n=e.getAttribute("href");return n?""===n?t.emptyHref.push(e):"#"===n?t.emptyFragment.push(e):void 0:t.missingHref.push(e)}));const n=e=>{e.forEach(((e,n)=>{mark(e,100*n,t.missingHref.length)}))};notify(0,0,[{text:"Mark missing href",callback:n.bind(null,t.missingHref)},{text:"Mark empty href",callback:n.bind(null,t.missingHref)},{text:"Mark empty fragment",callback:n.bind(null,t.missingHref)}],"4ETB - Check Links",`Missing href: ${t.missingHref.length}`,`Empty href: ${t.emptyHref.length}`,`Empty fragment: ${t.emptyFragment.length}`)}function checkImages(){}function outlines(){}function detectOverflow(){const e=Array.from(document.querySelectorAll("*")),t=[];e.forEach(((e,n)=>{e.offsetWidth>window.innerWidth&&t.push(e)})),notify(5e3,0,[{text:"Mark overflowing elements",callback:()=>{t.forEach(((e,n)=>{mark(e,100*n,t.length)}))}}],"Overflowing Elements",`Found ${t.length} overflowing elements`)}